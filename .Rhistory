#                     high=gdarkred,
#                     limits = c(0,100)) +
scale_fill_gradientn(colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70, 100))) +
theme_void() +
theme(aspect.ratio = 1, legend.position = legpos) +
NULL
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
# scale_fill_gradient2(name = "",
#                     low=glightyellow,
#                     mid=gdark,
#                     high=gdarkred,
#                     limits = c(0,100)) +
scale_fill_gradientn(colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1, legend.position = legpos) +
NULL
for (i in states) {
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1, legend.position = "off") +
ggtitle(i) # for the main title
NULL
ggsave(paste0(i,"_map.pdf"), device = "pdf")
toc()
}
title <- as.character(sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name) %>% slice(1))
as.character(sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name) %>% slice(1))
sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name) %>% slice(1)
sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name)
unique(sa2data$gcc_name)
sa2data %>% filter(city == TRUE, state == "Victoria") %>% select(gcc_name)
sa2data %>% filter(city == TRUE, state == "Victoria") %>% select(gcc_name) %>% slice(1)
as.character(sa2data %>% filter(city == TRUE, state == "Victoria") %>% select(gcc_name) %>% slice(1))
name <- sa2data %>% filter(city == TRUE, state == "Victoria") %>% select(gcc_name) %>% slice(1)
View(name)
name[1]
for (i in states) {
name <- sa2data %>% filter(city == TRUE, state == "Victoria") %>% select(gcc_name) %>% slice(1)
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1, legend.position = "off") +
ggtitle(name[1]) # for the main title
NULL
ggsave(paste0(name[1],"_map.pdf"), device = "pdf")
toc()
}
for (i in states) {
name <- sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name) %>% slice(1)
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1, legend.position = "off") +
ggtitle(name[1]) # for the main title
NULL
ggsave(paste0(name[1],"_map.pdf"), device = "pdf")
toc()
}
as.character(name[1])
namedate <- sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name)
namedata <- sa2data %>% filter(city == TRUE, state == "Victoria") %>% select(gcc_name)
namedata[2]
namedata[1,2]
View(namedata)
namedata[1,4]
namedata[4,1]
# Generate percentage variable
attainment <- attainment %>%
rename(sa2_name = HEAP...1.Digit.Level) %>%
mutate(pop = Total - Not.stated,
bach.count = Postgraduate.Degree.Level +
Graduate.Diploma.and.Graduate.Certificate.Level +
Bachelor.Degree.Level,
bach = 100 * bach.count / pop) %>%
select(sa2_name, pop, bach.count, bach) %>%
slice(2:n()) %>%
mutate_if(is.factor, as.character)
# Read in higher education attainment data
attainment <- read_csv("data/attainment_by_sa2.csv",
skip = 10)
# Make better names
names(attainment)<- make.names(names(attainment),unique = TRUE)
# Generate percentage variable
attainment <- attainment %>%
rename(sa2_name = HEAP...1.Digit.Level) %>%
mutate(pop = Total - Not.stated,
bach.count = Postgraduate.Degree.Level +
Graduate.Diploma.and.Graduate.Certificate.Level +
Bachelor.Degree.Level,
bach = 100 * bach.count / pop) %>%
select(sa2_name, pop, bach.count, bach) %>%
slice(2:n()) %>%
mutate_if(is.factor, as.character)
# Merge to shapefile in sa2
sa2data <- left_join(sa2, attainment, by = "sa2_name")
sa2nona <- filter(sa2data, !is.na(bach))
states <- as.character(unique(sa2data$state))
namedata <- sa2data %>% filter(city == TRUE, state == "Victoria") %>% select(gcc_name)
namedata[4,1]
as.character(namedata[4,1])
as.character(namedata[1,1])
for (i in states) {
namedata <- sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name)
name <- as.character(namedata[1,1])
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1, legend.position = "off") +
ggtitle(name) # for the main title
NULL
ggsave(paste0(name,"_map.pdf"), device = "pdf")
toc()
}
for (i in states) {
namedata <- sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name)
name <- as.character(namedata[1,1])
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
ggtitle(name) # for the main title
NULL
ggsave(paste0(name,"_map.pdf"), device = "pdf")
toc()
}
i = "Australian Capital Territory"
sa2data %>% filter(city == TRUE,
state == i,
pop > 10)
sa2 <- shapefile.details %>%
rename(sa2 = "SA2_MAIN16",
sa2_short = "SA2_5DIG16",
sa2_name = "SA2_NAME16",
sa3 = "SA3_CODE16",
sa3_name = "SA3_NAME16",
sa4 = "SA4_CODE16",
sa4_name = "SA4_NAME16",
gcc = "GCC_CODE16",
gcc_name = "GCC_NAME16",
state_code = "STE_CODE16",
state = "STE_NAME16",
area = "AREASQKM16"
) %>%
mutate(city = if_else(grepl(c('Greater','Australian Capital Territory'), gcc_name), TRUE, FALSE))
sa2 <- shapefile.details %>%
rename(sa2 = "SA2_MAIN16",
sa2_short = "SA2_5DIG16",
sa2_name = "SA2_NAME16",
sa3 = "SA3_CODE16",
sa3_name = "SA3_NAME16",
sa4 = "SA4_CODE16",
sa4_name = "SA4_NAME16",
gcc = "GCC_CODE16",
gcc_name = "GCC_NAME16",
state_code = "STE_CODE16",
state = "STE_NAME16",
area = "AREASQKM16"
) %>%
mutate(city = if_else(grepl(c('Greater', gcc_name), TRUE,
if_else(state == "Australian Capital Territory", TRUE,
FALSE))))
sa2 <- shapefile.details %>%
rename(sa2 = "SA2_MAIN16",
sa2_short = "SA2_5DIG16",
sa2_name = "SA2_NAME16",
sa3 = "SA3_CODE16",
sa3_name = "SA3_NAME16",
sa4 = "SA4_CODE16",
sa4_name = "SA4_NAME16",
gcc = "GCC_CODE16",
gcc_name = "GCC_NAME16",
state_code = "STE_CODE16",
state = "STE_NAME16",
area = "AREASQKM16"
) %>%
mutate(city = if_else(grepl('Greater', gcc_name), TRUE,
if_else(state == "Australian Capital Territory", TRUE,
FALSE)))
# Read in higher education attainment data
attainment <- read_csv("data/attainment_by_sa2.csv",
skip = 10)
# Make better names
names(attainment)<- make.names(names(attainment),unique = TRUE)
# Generate percentage variable
attainment <- attainment %>%
rename(sa2_name = HEAP...1.Digit.Level) %>%
mutate(pop = Total - Not.stated,
bach.count = Postgraduate.Degree.Level +
Graduate.Diploma.and.Graduate.Certificate.Level +
Bachelor.Degree.Level,
bach = 100 * bach.count / pop) %>%
select(sa2_name, pop, bach.count, bach) %>%
slice(2:n()) %>%
mutate_if(is.factor, as.character)
# Merge to shapefile in sa2
sa2data <- left_join(sa2, attainment, by = "sa2_name")
sa2nona <- filter(sa2data, !is.na(bach))
# Create map for each capital city, plus Australia
states <- as.character(unique(sa2data$state))
for (i in states) {
namedata <- sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name)
name <- as.character(namedata[1,1])
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
ggtitle(name) # for the main title
NULL
ggsave(paste0(name,"_map.pdf"), device = "pdf")
toc()
}
for (i in states) {
namedata <- sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name)
name <- as.character(namedata[1,1])
assign(paste0(make.names(name),".map"),
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
ggtitle(name) + # for the main title
NULL
)
get(paste0(make.names(name),".map"))
ggsave(paste0(name,"_map.pdf"), device = "pdf")
toc()
}
# Create map for each capital city
australia.map <-
sa2data %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
NULL
ggsave("australia_map.pdf", australia.map ,device = "pdf")
# Create map for each capital city
australia.map <-
sa2data %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70)) +
theme_void() +
theme(legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
NULL
ggsave("australia_map.pdf", australia.map ,device = "pdf")
SA <- sa2data %>% filter(state == "South Australia")
SA <- sa2data %>% filter(state == "South Australia") %>% group_by(sa2_name)
SA <- sa2data %>% filter(state == "South Australia") %>% group_by(sa2_name) %>% summarise()
SA
SA <- sa2data %>% filter(state == "South Australia") %>% group_by(sa2_name) %>%   summarise(mean = mean(bach), n = n())
SA
View(SA)
# Create useless map for Australia
australia.map <-
sa2data %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey10") +
theme_void() +
theme(legend.position = "top",
plot.title = element_text(hjust = 0.5)) +
NULL
ggsave("australia_map.pdf", australia.map ,device = "pdf")
# Create useless map for Australia
australia.map <-
sa2data %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(legend.position = "top",
plot.title = element_text(hjust = 0.5)) +
NULL
ggsave("australia_map.pdf", australia.map ,device = "pdf")
# Create map for each capital city
states <- as.character(unique(sa2data$state))
for (i in states) {
namedata <- sa2data %>% filter(city == TRUE, state == i) %>% select(gcc_name)
name <- as.character(namedata[1,1])
assign(paste0(make.names(name),".map"),
sa2data %>% filter(city == TRUE,
state == i,
pop > 10) %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
ggtitle(name) + # for the main title
NULL
)
get(paste0(make.names(name),".map"))
ggsave(paste0(name,"_map.pdf"), device = "pdf")
toc()
}
library(tools)
compactPDF("mapping_higher_education.pdf",
qpdf = Sys.which(Sys.getenv("R_QPDF", "qpdf")),
gs_cmd = Sys.getenv("R_GSCMD", ""),
gs_quality = Sys.getenv("GS_QUALITY", "none"),
gs_extras = character())
?compactPFG
?compactPDF
compactPDF("mapping_higher_education.pdf",
gs_quality = Sys.getenv("GS_QUALITY", "none"),
gs_extras = character())
compactPDF("mapping_higher_education.pdf",
gs_quality = Sys.getenv("GS_QUALITY", "none"))
?compactPDF
compactPDF("mapping_higher_education.pdf",
gs_quality = "printer"))
compactPDF("mapping_higher_education.pdf",
gs_quality = "printer")
compactPDF("mapping_higher_education.pdf",
gs_quality = "book")
compactPDF("mapping_higher_education.pdf",
gs_quality = "ebook")
compactPDF("mapping_higher_education.pdf",
gs_quality = "screen")
compactPDF("mapping_higher_education.pdf",
gs_quality = "screen")
?im.convert
library("animation")
im.convert("mapping_higher_education.pdf", output = "mapping.png", extra.opts="-density 150")
compactPDF("mapping_higher_education2.pdf",
gs_quality = "screen")
im.convert("mapping_higher_education2.pdf", output = "mapping.png", extra.opts="-density 150")
compactPDF("mapping_higher_education2.pdf",
gs_quality = "screen")
im.convert("mapping_higher_education2.pdf", output = "mapping.png", extra.opts="-density 150")
ausdata <- australia.map$data
ausdata
write_csv(ausdata, "ausdata.csv")
ausdata <- australia.map$data %>% group_by(sa2_name) %>% summarise(bach = mean(bach))
View(ausdata)
ausdata <- australia.map$data %>% group_by(sa2_name, state, gcc_name) %>% summarise(bach = mean(bach))
View(ausdata)
findodd <- ausdata %>% filter(state == "South Australia")
View(findodd)
sa2data %>% filter(state == "South Australia", sa2_name == "Western") %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
ggtitle(name) + # for the main title
NULL
sa2data %>% filter(state == "South Australia", gcc_name == "Rest of South Australia") %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
ggtitle(name) + # for the main title
NULL
sa2data %>% filter(state == "South Australia", gcc_name == "Rest of SA") %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
NULL
sa2data %>% filter(state == "South Australia", gcc_name == "Rest of SA") %>%
ggplot() +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
geom_text() +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
NULL
sa2data %>% filter(state == "South Australia", gcc_name == "Rest of SA") %>%
ggplot(aes(label = sa2_name)) +
geom_polygon(aes(x = long, y = lat, group = group, fill = bach), color = NA) +
geom_text() +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
NULL
sa2data %>% filter(state == "South Australia", gcc_name == "Rest of SA") %>%
ggplot(aes(x = long, y = lat, group = group, fill = bach, label = sa2_name)) +
geom_polygon(color = NA) +
geom_text() +
scale_fill_gradientn(name = "",
colours = c(glightyellow, gdark, gdarkred),
values = rescale(c(0, 20, 50, 70)),
limits = c(0,70),
na.value = "grey90") +
theme_void() +
theme(aspect.ratio = 1,
legend.position = "off",
plot.title = element_text(hjust = 0.5)) +
NULL
western <- sa2data %>% filter(sa2_name == "Western")
View(western)
western <- sa2data %>% filter(sa2_name == "Western") %>% slice(1)
